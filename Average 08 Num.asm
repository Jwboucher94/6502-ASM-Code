; 8 Number Averaging on the 6502
; Jack Boucher

; Set number of values, binary logarithm, values
N = 7
BL = 3
STORE = $0200
CARRYSTORE = $0201
NUM0 = $9F
NUM1 = $35
NUM2 = $FD
NUM3 = $CF
NUM4 = $CC
NUM5 = $A2
NUM6 = $AF
NUM7 = $D2

NUM0S = $0100

; Load values and push onto stack
LDX #0
LDA #NUM0
STA NUM0S,X
INX
PHA
LDA #NUM1
STA NUM0S,X
INX
PHA
LDA #NUM2
STA NUM0S,X
INX
PHA
LDA #NUM3
STA NUM0S,X
INX
PHA
LDA #NUM4
STA NUM0S,X
INX
PHA
LDA #NUM5
STA NUM0S,X
INX
PHA
LDA #NUM6
STA NUM0S,X
INX
PHA
LDA #NUM7
STA NUM0S,X
PHA

; Steps for addition
LDA #0

ADDLOOP:
PLA
ADC STORE
BCC SKIPCARRY
INC CARRYSTORE
CLC
CLV
SKIPCARRY:
STA STORE

ADDCHECK: 
CLC
TSX
CPX #$FF
BNE ADDLOOP 

; set x to 0, jump to check if division is needed
LDX #0 
LDY #0
JMP BLCHECK

; only comes here if BL > 0

DIVIDE:
INY
LDA CARRYSTORE
CLC
ROR
BCC NOCARRY
SEC
NOCARRY:
STA CARRYSTORE
LDA STORE
ROR
CLC
STA STORE

BLCHECK:
CPY #BL
BNE DIVIDE


; start replacing numbers
LDX #0
LDY #0

REPLACEMENT:
LDA STORE
CMP NUM0S,X
BEQ CHECKCOUNT
BCC CHECKCOUNT
LDA #00
STA NUM0S,X

CHECKCOUNT:
CPX #N
BEQ FINISHED
INX
JMP REPLACEMENT

FINISHED:
BRK